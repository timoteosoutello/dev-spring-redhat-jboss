# server.servlet.context-path=/spring-jboss-rest/api
# server.port=9797

# Info endpoint
info.app.name=@project.artifactId@
info.app.description=@project.name@
info.app.version=@project.version@

# Build data
build.version=@project.version@
build.timestamp=@timestamp@

# Spring Actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Readiness and Liveness probes
management.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Liquibase Configuration
spring.liquibase.change-log=classpath:db/changelog/changelog.xml

# Hibernate 
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Cache
# infinispan.jndi.url=
# Enables second level cache
# spring.jpa.properties.hibernate.cache.use_second_level_cache=true
# Enable query cache
# spring.jpa.properties.hibernate.cache.use_query_cache=true
# Enable those entities marked with @Cacheable to be cached
# spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE
# Enables second level cache
# spring.jpa.properties.hibernate.cache.use_second_level_cache=true
# Enable query cache
# spring.jpa.properties.hibernate.cache.use_query_cache=true
# Use Infinispan second level cache provider
# spring.jpa.properties.hibernate.cache.region.factory_class=infinispan
# Force using local configuration when only using a single node.
# Otherwise a clustered configuration is loaded.
# spring.jpa.properties.hibernate.cache.infinispan.cfg=org/infinispan/hibernate/cache/commons/builder/infinispan-configs-local.xml
# Entity specific configuration, e.g. via property:
#   hibernate.cache.infinispan.<Entity FQN>.expiration.max_idle
# spring.jpa.properties.hibernate.cache.<ENTITY>.expiration.max_idle=1000
# Generate statistics to see effects of second level cache
# spring.jpa.properties.hibernate.generate_statistics=true
# Make session metrics/statistics logging less noisy
# logging.level.org.hibernate.engine.internal.StatisticalLoggingSessionEventListener=ERROR



# MySQL Configuration
#spring.datasource.url=jdbc:mysql://localhost:52000/springdatarest?useTimezone=true&serverTimezone=UTC&useSSL=false
#spring.datasource.username=springuser
#spring.datasource.password=admin
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# H2 Database
### Enable H2 Console Access 
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console
### Define H2 Datasource configurations
# spring.datasource.platform=h2
# spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS corp
# spring.datasource.username=sa
# spring.datasource.password=sa
# spring.datasource.driver-class-name=org.h2.Driver

# Pool connection
# spring.datasource.hikari.minimumIdle=1
# spring.datasource.hikari.maximumPoolSize=8
# spring.datasource.hikari.idleTimeout=30000
